@page "/"
@page "/login"
@using System.Collections;
@using System.Collections.Generic;
@using Bopo.Data
@using Bopo.Autenticazione
@inject Database database
@inject IJSRuntime js
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager NavigationManager


    <div class="col-lg-6 col-xl-4 offset-lg-3 offset-xl-4" style="">
        <RadzenCard class="m-3" Style="border-radius: 1rem">
            
                <RadzenImage Path="images/bopo.svg" Style="width: 65%; align-self:center "/>
            
            <h1 class="mb-4" style="text-align:center">Login</h1>
   
            <RadzenCard class="m-3" Style="border-radius: 1rem">
                    <div class="row mb-3">
                        <div class="col-md-3" style="align-self: center;">
                            <RadzenLabel Text="Email"/>
                        </div>
                        <div class="col">
                            <RadzenTextBox style="display: block" Name="Email" @bind-Value="model.username" Class="w-100"  Placeholder="goblino@example.com"/>
                            <RadzenRequiredValidator Component="Email" Text="Email is required"  Style="position: absolute" />
                            <RadzenEmailValidator Component="Email" Text="Provide a valid email address"  Style="position: absolute" />
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-3" style="align-self: center;">
                            <RadzenLabel Text="Password"/>
                        </div>
                        <div class="col">
                            <RadzenPassword Placeholder="************" Class="w-100" @bind-Value="model.password" />
                        </div>
                    </div>
                    <div class="row mb-4">
                        
                  <RadzenButton  ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Secondary" Click=@(Authenticate)  style="align-self:center;display: block;width: 100%;">
                    <span class="rz-button-text">Log in</span>
                    <RadzenImage Path="images/login_icon.png" Style="width: 20px; height: 20px; margin-left: 8px;" />
                  </RadzenButton>
                    </div>
                    <div class="row mb-1">
                    <div class="col-md-8">
                    Non sei ancora registrato? <a href="/registration">Clicca qui!</a>
                    </div>
                    </div>
             </RadzenCard>
            
        </RadzenCard>
    </div>


@code {

    private class Model
    {
        public string username { get; set; }
        public string password { get; set; }
    }

    private Model model = new Model();


    private async Task Authenticate()
    {

        var utente = database.getUserByUsername(model.username);

        if(utente == null)
        {
            // Utente non esiste
            await js.InvokeVoidAsync("alert", "Utente non registrato");
            return;
        }
        else if(utente != null && utente.password != model.password)
        {
            // Utente esiste pass errata
            await js.InvokeVoidAsync("alert", "Password errata");
            return;
        }
        else
        {
            // Utente login

            var authStateProvider = (Authentication)authenticationStateProvider;

            await authStateProvider.UpdateAuthenticationState(
                new UserSession
                    {
                        UserName = utente.username,
                        Role = utente.role
                    }
            );
        }

        if(utente.role == "Amministratore")
            NavigationManager.NavigateTo("/gestionerichieste",true);

        else
            NavigationManager.NavigateTo("/account",true); 

    }
    
}   
    
