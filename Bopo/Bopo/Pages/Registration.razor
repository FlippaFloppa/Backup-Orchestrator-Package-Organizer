@page "/registration"
@using Radzen
@using System.Text.Json
<div class="col-lg-6 col-xl-4 offset-lg-3 offset-xl-4" style="">
   <RadzenCard class="m-3" Style="border-radius: 1rem">
      <RadzenImage Path="images/bopo.svg" Style="width: 65%; align-self:center " />
      <h1 class="mb-4" style="text-align:center">Login</h1>
      <RadzenCard class="m-3" Style="border-radius: 1rem">
         <div class="row mb-3">
            <div class="col-md-4" style="align-self: center;">
               <RadzenLabel Text="Email" />
            </div>
            <div class="col">
               <RadzenTextBox style="display: block" Name="Email" Class="w-100"
                  Placeholder="goblino@example.com" />
               <RadzenRequiredValidator Component="Email" Text="Email is required" Style="position: absolute" />
               <RadzenEmailValidator Component="Email" Text="Provide a valid email address"
                  Style="position: absolute" />
            </div>
         </div>
         <div class="row mb-3">
            <div class="col-md-4" style="align-self: center;">
               <RadzenLabel Text="Password" />
            </div>
            <div class="col">
               <RadzenPassword Placeholder="helloWorld123" Class="w-100" />
            </div>
         </div>
         <div class="row mb-4">
            <div class="row">
               <div class="col-lg-10">
                     <div class="row mb-5">
                        <div class="col-md-4" style="align-self: center;">
                           <RadzenLabel Text="Password" />
                        </div>
                        <div class="col">
                           <RadzenPassword style="display: block" Name="Password"
                              @bind-Value=@model.Password Class="w-100" />
                           <RadzenRequiredValidator Component="Password" Text="Enter password"
                              Popup="@popup" Style="position: absolute" />
                        </div>
                     </div>
                     <div class="row mb-4">
                        <div class="col-md-4" style="align-self: center;">
                           <RadzenLabel Text="Repeat Password" />
                        </div>
                        <div class="col">
                           <RadzenPassword style="display: block" Name="RepeatPassword"
                              @bind-Value=@model.RepeatPassword Class="w-100" />
                           <RadzenRequiredValidator Component="RepeatPassword" Text="Repeat your password"
                              Popup=@popup Style="position: absolute" />
                           <RadzenCompareValidator Visible=@(!string.IsNullOrEmpty(model.RepeatPassword))
                              Value=@model.Password Component="RepeatPassword"
                              Text="Passwords should be the same" Popup=@popup
                              Style="position: absolute" />
                        </div>
                     </div>
                     <RadzenButton ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Secondary"
                        style="align-self:center;display: block;width: 100%;">
                        <span class="rz-button-text">Registrer</span>
                        <RadzenImage Path="images/login_icon.png" Style="width: 20px; height: 20px; margin-left: 8px;" />
                     </RadzenButton>
               </div>
            </div>
         </div>
      </RadzenCard>
   </RadzenCard>
</div>
<EventConsole @ref=@console Class="mt-4" />
@code {
class Model
{
public string Password { get; set; }
public double Value { get; set; }
public string RepeatPassword { get; set; }
}
bool popup;
double targetValue = 1;
CompareOperator compareOperator = CompareOperator.Equal;
Model model = new Model();
EventConsole console;
void Log(string eventName, string value)
{
console.Log($"{eventName}: {value}");
}
void OnSubmit(Model model)
{
Log("Submit", JsonSerializer.Serialize(model, new JsonSerializerOptions() { WriteIndented = true }));
}
void OnInvalidSubmit(FormInvalidSubmitEventArgs args)
{
Log("InvalidSubmit", JsonSerializer.Serialize(args, new JsonSerializerOptions() { WriteIndented = true }));
}
}
